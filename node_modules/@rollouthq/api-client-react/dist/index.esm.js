import d from"assert";import{TRPCClientError as Q}from"@trpc/client";import{createReactQueryHooks as R}from"@trpc/react";import p,{useRef as T,useState as i,createContext as P,useContext as I,useMemo as x,useCallback as m}from"react";import{useQuery as g,QueryClient as k,QueryClientProvider as v}from"react-query";var o=R(),B=o.useQuery,N=o.useMutation,b=o.useContext;function G(r){let{client:t}=o.useContext(),[e,s]=i(),[n,u]=i(!1);return{...g([r,e],()=>(d(e!=null),t.query(r,e)),{enabled:n}),fetch:c=>{s(c),u(!0)},input:e}}function L(r){let{token:t,apiBaseUrl:e,children:s}=r,n=T(void 0),u=m(async()=>typeof t=="string"?t:(n.current==null&&(n.current=await t()),n.current),[t]),[l]=i(()=>new k({defaultOptions:{queries:{refetchOnWindowFocus:!1,retry(y,a){if(a instanceof Q){if(a.data.code==="NOT_FOUND")return!1;if(a.data.code==="UNAUTHORIZED")return n.current=void 0,!0}return!0}}}})),[f]=i(()=>o.createClient({url:`${e}/trpc`,async headers(){return{authorization:`Bearer ${await u()}`}}})),c=x(()=>({getToken:u,apiBaseUrl:e}),[e]);return p.createElement(C.Provider,{value:c},p.createElement(o.Provider,{client:f,queryClient:l},p.createElement(v,{client:l},s)))}var C=P(void 0);function U(){var t;let r=I(C);if(!r){let e=new Error("No RolloutAPIClientContext provided");throw e.name="ContextError",(t=Error.captureStackTrace)==null||t.call(Error,e,U),e}return r}export{L as RolloutAPIClientProvider,G as useLazyQuery,N as useMutation,B as useQuery,U as useRolloutAPIClientContext,b as useTRPCContext};
//# sourceMappingURL=index.esm.js.map